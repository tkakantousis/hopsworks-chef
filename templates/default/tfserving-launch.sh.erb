#!/usr/bin/env bash

WAIT_START=20
MODEL_NAME=$1
HADOOP_HOME=<%= node['hops']['base_dir'] %>
GRPCPORT=$2
RESTPORT=$3
SECRET_DIR=$4
ENABLE_BATCHING=$5
PROJECT_NAME=$6
LOGDIR=${SECRET_DIR}/logs
LOGFILE=${LOGDIR}/${MODEL_NAME}.log
PID_FILE=${SECRET_DIR}/tfserving.pid
FILE_SYSTEM_POLLING_INTERVAL_SECS=10


help() {
    echo ""
    echo "usage: $0 MODEL_NAME GRPCPORT RESTPORT SECRET_DIR BATCHING PROJECTNAME"
    echo ""
    exit 1
}

function kill_named {
    PID=$(ps aux | grep -i tensorflow_model_server | grep "$PORT" | grep -v grep | awk '{print $2}')
    if [ "$PID" != "" ] ; then
	    kill -9 "$PID" > /dev/null 2>&1
      res=$?
    else
      res=$NOT_FOUND
    fi
    return "$res"
}


if [ $# -ne 6 ]; then
  help
fi

if [ ! -d "$SECRET_DIR" ] ; then
    echo "Secret dir does not exist: $SECRET_DIR"
    exit 2
fi

mkdir -p "$LOGDIR"

export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HADOOP_HOME}/lib/native
export HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop

cd "$SECRET_DIR" || exit

BATCHING_COMMAND=''
if [ "$ENABLE_BATCHING" == "1" ];
then
  BATCHING_COMMAND='--enable_batching=true'
fi

setsid tensorflow_model_server --port="$GRPCPORT" --rest_api_port="$RESTPORT" --model_name="$MODEL_NAME" --model_base_path="$SECRET_DIR"/"$MODEL_NAME" $BATCHING_COMMAND --file_system_poll_wait_seconds="$FILE_SYSTEM_POLLING_INTERVAL_SECS" &> >(sed -u 's/.*/'"$PROJECT_NAME"','"$MODEL_NAME"' &/' &> "$LOGFILE") &

echo $! > "$PID_FILE"

# Check that the token is written to the logfile, return when we see it.
timeout=0
while [ $timeout -lt $WAIT_START ] ; do
	sleep 1
	grep 'serving' "$LOGFILE"
        if [ $? -eq 0 ] ; then
          break
        fi
	echo -n "."
	timeout=$((timeout + 1))
done
echo ""

# If the timeout was exceeded, kill tfserver
if [ "$timeout" -eq $WAIT_START ] ; then
 PID=$(cat "$PID_FILE")
 kill "$PID" > /dev/null 2>&1
 if [ $? -ne 0 ] ; then
     kill_named
 fi
fi

exit $?
