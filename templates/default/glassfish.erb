#!/usr/bin/env bash
#
### BEGIN INIT INFO
# Provides:          glassfish
# Required-Start:    
# Required-Stop:     
# Should-Start:      $network $time
# Should-Stop:       $network $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop a glassfish domain server 
# Description:       Controls the main glassfish domain server 
### END INIT INFO
#
umask 0077

start() {
  ulimit -n 30000
#  ulimit -l  2>&1 > /dev/null
  rm -rf <%= node['glassfish']['domains_dir'] %>/<%= @domain_name %>/osgi-cache/*
  su -c "<%= node['glassfish']['base_dir'] %>/versions/current/bin/asadmin --user <%= node['hopsworks']['admin']['user'] %> --passwordfile <%= @password_file %> start-domain --debug false --upgrade false <%= @domain_name %>" <%= node['glassfish']['user'] %> 
  return $?

}

stop() {
su -c "<%= node['glassfish']['base_dir'] %>/versions/current/bin/asadmin --user <%= node['hopsworks']['admin']['user'] %> --passwordfile <%= @password_file %> stop-domain <%= @domain_name %>" <%= node['glassfish']['user'] %> 
res=$?
id=$(ps -ef | grep ASMain)
if [ "$id" != "" ] ; then
  ps -ef | awk '/ASMain/{print $2}' | xargs kill 2> /dev/null
  res=$?
fi
  return $res
}

restart() {
  echo "Restarting"
  stop
  start
  return $?
}

status() {  
  su -s /bin/sh <%= node['glassfish']['user'] %> -c "exec <%= node['glassfish']['base_dir'] %>/versions/current/bin/asadmin list-domains --user <%= node['hopsworks']['admin']['user'] %> --passwordfile <%= @password_file %> --domaindir <%= node['glassfish']['domains_dir'] %>" | grep "<%= @domain_name %> running"
}

# user-supplied parameter to stop/start/restart process.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reload)
    restart
    ;;
  status)
    status
    ;;
  -h|--help)
    echo ""
    echo "usage: <prog> start|stop|restart|status"
    echo ""
    exit 0
    ;;
  *)
    echo $"Usage: <prog> {start|stop|restart|status}"
    exit 1
  esac


exit $?
